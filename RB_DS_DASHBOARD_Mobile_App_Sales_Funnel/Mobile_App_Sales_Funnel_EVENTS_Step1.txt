-----------------------------------------------●▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬●-----------------------------------------------
-----------------------------------------------         BUILDING TABLES          ----------------------------------------------
-----------------------------------------------●▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬●-----------------------------------------------
WITH PERIOD AS (
SELECT '20180101' AS StartDate,
       REPLACE(CAST(DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) AS STRING),"-","") AS FinishDate
--       '20191007'AS FinishDate
),
FUNNEL_EVENT AS (
SELECT ['BE_CLIENT_BUTTON','FORM_DC_NTB_START_TYPING',
        'FORM_DC_NTB_SEND_OTP','FORM_DC_NTB_VERIFY_OTP',
        'FORM_DC_NTB_SEND_PASSPORT_DATA','FORM_DC_NTB_SUBMIT_LEAD'] AS EVENT
),
DATA_INSTALL_ANDROID AS ( 
SELECT DATE(TIMESTAMP(event_time)) AS date,
       advertising_id, af_ad_type, af_channel, af_siteid, 
       agency, media_source, campaign, attributed_touch_type,
       event_name,
       '' AS LEADID,
       platform, device_category,	device_type
FROM (
SELECT advertising_id, af_ad_type, af_channel, af_siteid, attributed_touch_type,
       campaign, 
       CASE
            WHEN af_prt<>'' AND media_source<>'' THEN media_source
            ELSE media_source
       END AS media_source, 
       af_prt AS agency,
       event_name, event_value, event_time, platform, device_category, device_type
FROM `raiffeisen-owox.OWOXBI_TRANSFER_APPSFLYER.android_events` 
WHERE event_name='install' 
) AS t1
),
DATA_INSTALL_IOS AS ( 
SELECT DATE(TIMESTAMP(event_time)) AS date,
       idfa, af_ad_type, af_channel, af_siteid, 
       agency, media_source, campaign, attributed_touch_type,
       event_name,
       '' AS LEADID,
       platform, device_category,	device_type
FROM (
SELECT idfa, af_ad_type, af_channel, af_siteid, attributed_touch_type,
       campaign, 
       CASE
            WHEN af_prt<>'' AND media_source<>'' THEN media_source
            ELSE media_source
       END AS media_source, 
       af_prt AS agency,
       event_name, event_value, event_time, platform, device_category, device_type
FROM `raiffeisen-owox.OWOXBI_TRANSFER_APPSFLYER.ios_events` 
WHERE event_name='install' 
) AS t1
),
DATA_EVENT_ANDROID AS (
SELECT DATE(TIMESTAMP(event_time)) AS date,
       advertising_id, af_ad_type, af_channel, af_siteid, 
       agency, media_source, campaign, attributed_touch_type,
       event_name, 
       CASE 
           WHEN event_name='FORM_DC_NTB_SUBMIT_LEAD' AND REGEXP_CONTAINS(event_value,R'Value|value')
                THEN REPLACE(REPLACE(SPLIT(event_value,':')[OFFSET (1)],'"',''),'}','')
           ELSE ''
       END AS LEADID,
       platform, device_category,	device_type     
FROM (
SELECT advertising_id, af_ad_type, af_channel, af_siteid, attributed_touch_type,
       campaign, 
       CASE
            WHEN af_prt<>'' AND media_source<>'' THEN media_source
            ELSE media_source
       END AS media_source, 
       af_prt AS agency,
       event_name, event_value, 
       event_time, platform, device_category, device_type
FROM `raiffeisen-owox.OWOXBI_TRANSFER_APPSFLYER.android_events` 
WHERE event_name IN (SELECT EVENT FROM FUNNEL_EVENT, UNNEST(EVENT) AS EVENT)
) AS t1
),
DATA_EVENT_IOS AS (
SELECT DATE(TIMESTAMP(event_time)) AS date,
       idfa, af_ad_type, af_channel, af_siteid, 
       agency, media_source, campaign, attributed_touch_type,
       event_name, 
       CASE 
           WHEN event_name='FORM_DC_NTB_SUBMIT_LEAD' AND REGEXP_CONTAINS(event_value,R'Value|value')
                THEN REPLACE(REPLACE(SPLIT(event_value,':')[OFFSET (1)],'"',''),'}','')
           ELSE ''
       END AS LEADID,
       platform, device_category,	device_type     
FROM (
SELECT idfa, af_ad_type, af_channel, af_siteid, attributed_touch_type,
       campaign, 
       CASE
            WHEN af_prt<>'' AND media_source<>'' THEN media_source
            ELSE media_source
       END AS media_source, 
       af_prt AS agency,
       event_name, event_value, 
       event_time, platform, device_category, device_type
FROM `raiffeisen-owox.OWOXBI_TRANSFER_APPSFLYER.ios_events` 
WHERE event_name IN (SELECT EVENT FROM FUNNEL_EVENT, UNNEST(EVENT) AS EVENT)
) AS t1
),
DATA_CRM_LEAD AS (
SELECT *         
FROM (
---------------------------------------------------------------------------------------------------------------------------
--УНИКАЛИЗИРУЕМ ПО LEADID
SELECT EXTRACT(MONTH FROM Date) AS Month, EXTRACT(YEAR FROM Date) AS Year, Date, SPLIT(LeadID,"_")[OFFSET (0)] AS LeadID, ProductLine, Product, Medium, 
       UTM_CAMPAIGN AS Campaign, utm_term AS Keyword, NTB, VB, BrandFormance,
       StatusLead, ApprovalLead
FROM (
SELECT Date, LeadID, ProductLine, Product, Medium, UTM_CAMPAIGN, utm_term, NTB, VB, BrandFormance,
       StatusLead, ApprovalLead,
       ROW_NUMBER() OVER (PARTITION BY LeadID) AS ROW
FROM (
---------------------------------------------------------------------------------------------------------------------------
--ОБРАБОТКА ЛИДОВ С LEADID       
SELECT DATE(LeadDate) AS Date, leadid AS LeadID, PRODUCT_LINE AS ProductLine, 
       `raiffeisen-owox.RB_DS_RUAKBP5.getPRODUCT_by_CRM` (PRODUCT_LINE) AS Product,       
       UTM_MEDIUM AS Medium, UTM_CAMPAIGN, utm_term,
       NTB, STATUS AS StatusLead, APPROVAL AS ApprovalLead,
       CASE 
           WHEN REGEXP_CONTAINS(UTM_CAMPAIGN,R".*\|vb\|.*|.*\|vb|_vb|.*vb\||vb%|7Cvb|7cvb") THEN "TRUE"           
       ELSE 'FALSE' END AS VB,
          CASE 
              WHEN REGEXP_CONTAINS(UTM_CAMPAIGN,R".*\|bf\|.*|_bf|brandfrm") THEN "TRUE"
              ELSE "FALSE"
          END AS BrandFormance       
FROM `raiffeisen-owox.Orders_CRM.CRM_orders`
WHERE --UTM_MEDIUM ='cpc'
--      AND REGEXP_MATCH(UTM_SOURCE,R'yandex$|google$|mytarget|facebook|dbm|astraone')      
--      AND CAST(DATE(LeadDate) AS STRING) BETWEEN '2018-11-01' AND '2018-11-30'
      --AND 
      CAST(DATE(LeadDate) AS STRING) BETWEEN CONCAT(CAST(EXTRACT(YEAR FROM CURRENT_DATE())-1 AS STRING),'-01-01') AND CAST(DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) AS STRING)
--      AND REGEXP_CONTAINS(PRODUCT_LINE,r'Personal Loans')
      AND leadid IS NOT NULL
---------------------------------------------------------------------------------------------------------------------------
UNION ALL
---------------------------------------------------------------------------------------------------------------------------
--ОБРАБОТКА ЛИДОВ БЕЗ LEADID
SELECT Date, CAST(LeadID AS STRING) AS LeadID, ProductLine, Product, Medium, UTM_CAMPAIGN, utm_term, NTB, StatusLead, ApprovalLead, VB, BrandFormance
FROM (       
SELECT Date,
       ROW_NUMBER() OVER (PARTITION BY LeadID) AS LeadID,
       ProductLine, Product, Medium, UTM_CAMPAIGN, utm_term, NTB, StatusLead, ApprovalLead, VB, BrandFormance
FROM (       
SELECT DATE(LeadDate) AS Date, leadid AS LeadID, PRODUCT_LINE AS ProductLine, 
       `raiffeisen-owox.RB_DS_RUAKBP5.getPRODUCT_by_CRM` (PRODUCT_LINE) AS Product,  
       CASE 
           WHEN REGEXP_CONTAINS(UTM_CAMPAIGN,r'.*\|vb\|.*|.*\|vb|_vb|.*vb\||vb%|7Cvb|7cvb') THEN 'TRUE'
       ELSE 'FALSE' END AS VB,
          CASE 
              WHEN REGEXP_CONTAINS(UTM_CAMPAIGN,R".*\|bf\|.*|_bf|brandfrm") THEN "TRUE"
              ELSE "FALSE"
          END AS BrandFormance,         
       UTM_MEDIUM AS Medium, UTM_CAMPAIGN, utm_term,
       NTB, STATUS AS StatusLead, APPROVAL AS ApprovalLead 
FROM `raiffeisen-owox.Orders_CRM.CRM_orders`
WHERE --UTM_MEDIUM ='cpc'
--      AND REGEXP_MATCH(UTM_SOURCE,R'yandex$|google$|mytarget|facebook|dbm|astraone')      
--      AND CAST(DATE(LeadDate) AS STRING) BETWEEN '2018-11-01' AND '2018-11-30'
      --AND 
      CAST(DATE(LeadDate) AS STRING) BETWEEN CONCAT(CAST(EXTRACT(YEAR FROM CURRENT_DATE())-1 AS STRING),'-01-01') AND CAST(DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY) AS STRING)
--      AND REGEXP_CONTAINS(PRODUCT_LINE,r'Personal Loans')
      AND leadid IS NULL
) AS t0
) AS t1
---------------------------------------------------------------------------------------------------------------------------
) AS t1
) AS t2
WHERE ROW=1
---------------------------------------------------------------------------------------------------------------------------
) AS t1
),
DATA_CRM_QLEADS AS ( --<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
---------------------------------------------------------------------------------------------------------------------------
--ОСТАВЛЯЕМ ТОЛЬКО КУЛИДЫ
SELECT *
FROM (
SELECT *,
       `raiffeisen-owox.RB_DS_RUAKBP5.getQLEAD_by_CRM` (Product,StatusLead,ApprovalLead) AS QLead           
FROM (
SELECT *
FROM DATA_CRM_LEAD
---------------------------------------------------------------------------------------------------------------------------
) AS t1
) AS t2
WHERE QLead = 'QLead'
---------------------------------------------------------------------------------------------------------------------------
),
DATA_CRM_DELIVERED AS (
---------------------------------------------------------------------------------------------------------------------------
--ОСТАВЛЯЕМ ТОЛЬКО КУЛИДЫ
SELECT *
FROM (
SELECT *,
       `raiffeisen-owox.RB_DS_RUAKBP5.getDELIVERY_by_CRM` (Product,StatusLead,ApprovalLead) AS Delivered             
FROM (
SELECT *
FROM DATA_CRM_LEAD
---------------------------------------------------------------------------------------------------------------------------
) AS t1
) AS t2
WHERE Delivered = 'Delivered'
----------------------------------------------------------------------------------------------------------------------------
),
DATA_CRM_ISSUES AS ( --<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
---------------------------------------------------------------------------------------------------------------------------
--ОСТАВЛЯЕМ ТОЛЬКО КУЛИДЫ
SELECT *
FROM (
SELECT *,
       `raiffeisen-owox.RB_DS_RUAKBP5.getISSUE_by_CRM` (Product,StatusLead,ApprovalLead) AS Issue             
FROM (
SELECT *
FROM DATA_CRM_LEAD
---------------------------------------------------------------------------------------------------------------------------
) AS t1
) AS t2
WHERE Issue = 'Issue'
----------------------------------------------------------------------------------------------------------------------------
),
DATA_AF_DAILY_REPORT AS (
SELECT CAST(date AS DATE) AS date, agency, media_source, campaign, 'android' AS platform,
       SUM(Impressions) AS Impressions,
       SUM(Clicks) AS Clicks,
       0 AS Installs,
       0 AS Lead,
       0 AS QLead,
       0 AS Delivered,       
       0 AS Issue,
       SUM(Total_Cost) AS Total_Cost       
FROM `raiffeisen-owox.RB_DS_TRANSFER_APPSFLYER.Pull_API_Daily_Report_Android`
GROUP BY date, agency, media_source, campaign
UNION ALL
SELECT CAST(date AS DATE) AS date, agency, media_source, campaign, 'ios' AS platform,
       SUM(Impressions) AS Impressions,
       SUM(Clicks) AS Clicks,
       0 AS Installs,
       0 AS Lead,     
       0 AS QLead,
       0 AS Delivered,       
       0 AS Issue,
       SUM(Total_Cost) AS Total_Cost       
FROM `raiffeisen-owox.RB_DS_TRANSFER_APPSFLYER.Pull_API_Daily_Report_iOS`
GROUP BY date, agency, media_source, campaign
),
DASHBOARD_DATA_BASIC AS (
---------------------------------------------------------------------------------------------------------------------------
-- BASE DATA
SELECT date, 
       af_ad_type, af_channel, af_siteid,	agency, media_source,	campaign, attributed_touch_type,
       event_name, platform, device_category,	
       CASE
           WHEN platform='android' THEN SPLIT(device_type,'::')[OFFSET (0)] 
           WHEN platform='ios' AND REGEXP_CONTAINS(device_type,R'iPhone') THEN 'iPhone'
           WHEN platform='ios' AND REGEXP_CONTAINS(device_type,R'iPad') THEN 'iPad'
           ELSE 'Other'
       END AS device_vendor, 
       CASE
           WHEN platform='android' THEN SPLIT(device_type,'::')[OFFSET (1)] 
           WHEN platform='ios' AND REGEXP_CONTAINS(device_type,R'iPhone') THEN REPLACE(device_type,'iPhone','')
           WHEN platform='ios' AND REGEXP_CONTAINS(device_type,R'iPad') THEN REPLACE(device_type,'iPad','')
           ELSE 'Other'        
       END AS device_model,
       NTB,
       SUM(Count) AS Count,
       SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,
       SUM(QLead) AS QLead,
       SUM(Delivered) AS Delivered,       
       SUM(Issue) AS Issue
FROM ( 

SELECT *, '' AS NTB, 1 AS Count, 1 AS Installs, 0 AS Lead, 0 AS QLead, 0 AS Delivered, 0 AS Issue
FROM DATA_INSTALL_ANDROID
UNION ALL
SELECT *, '' AS NTB, 1 AS Count, 1 AS Installs, 0 AS Lead, 0 AS QLead, 0 AS Delivered, 0 AS Issue
FROM DATA_INSTALL_IOS

UNION ALL

SELECT t7.*,
       IF(t8.Issue IS NULL,0,1) AS Issue
FROM (
SELECT t5.*,
       IF(t6.Delivered IS NULL,0,1) AS Delivered
FROM (
SELECT t3.*,
       1 AS Count,
       0 AS Installs,
       IF(t3.event_name='FORM_DC_NTB_SUBMIT_LEAD',1,0) AS Lead,
       IF(t4.QLead IS NULL,0,1) AS QLead
FROM (       
SELECT t1.*,
       IF(t2.NTB IS NULL,'',t2.NTB) AS NTB
FROM (
SELECT *
FROM DATA_EVENT_ANDROID
UNION ALL
SELECT *
FROM DATA_EVENT_IOS
) AS t1
LEFT JOIN (
SELECT *
FROM DATA_CRM_LEAD
) AS t2
ON t1.LEADID=t2.LeadID
) AS t3
LEFT JOIN (
SELECT *
FROM DATA_CRM_QLEADS
) AS t4
ON t3.LEADID=t4.LeadID
) AS t5
LEFT JOIN (
SELECT *
FROM DATA_CRM_DELIVERED
) AS t6
ON t5.LEADID=t6.LeadID
) AS t7
LEFT JOIN (
SELECT *
FROM DATA_CRM_ISSUES
) AS t8
ON t7.LEADID=t8.LeadID

) AS t9
GROUP BY date, 
         af_ad_type, af_channel, af_siteid,	agency, media_source,	campaign, attributed_touch_type,
         event_name, platform, device_category,	device_type, device_vendor, device_model, NTB
---------------------------------------------------------------------------------------------------------------------------
),
DASHBOARD_DATA_FULL_FUNNEL AS (
SELECT *,
       0 AS Count, '' AS NTB, 'NULL' AS event_name, 'NULL' AS device_category,	'NULL' AS device_vendor,-- 'NULL' AS device_model, 
       'FULL_FUNNEL' AS DATA_TYPE
FROM (       
---------------------------------------------------------------------------------------------------------------------------
-- NEED TO CONVERT TO SCHEMA AF DAILY REPORT
SELECT date, agency, media_source,	campaign, platform,
       0 AS Impressions,
       0 AS Clicks,
       SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,
       SUM(QLead) AS QLead,
       SUM(Delivered) AS Delivered,       
       SUM(Issue) AS Issue,
       0 AS Total_Cost
FROM (
---------------------------------------------------------------------------------------------------------------------------
-- BASE DATA
SELECT *
FROM DASHBOARD_DATA_BASIC
WHERE date <= DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY)
---------------------------------------------------------------------------------------------------------------------------
) AS t1
GROUP BY date, agency, media_source, campaign, platform
UNION ALL
SELECT date, agency, media_source,	campaign, platform,
       SUM(Impressions) AS Impressions,
       SUM(Clicks) AS Clicks,
       0 AS Installs,
       0 AS Lead,
       0 AS QLead,
       0 AS Delivered,
       0 AS Issue,
       SUM(Total_Cost) AS Total_Cost       
FROM DATA_AF_DAILY_REPORT
GROUP BY date, agency, media_source,	campaign, platform
---------------------------------------------------------------------------------------------------------------------------
) AS t2
),
DASHBOARD_DATA_OFFLINE_FUNNEL_BASED AS (
SELECT date, agency, media_source, campaign, platform,
       AVG_Impressions AS Impressions,
       AVG_Clicks AS Clicks,
       Installs, Lead, QLead,	Delivered, Issue,
       AVG_Total_Cost AS Total_Cost,
       Count,	NTB, event_name, device_category,	device_vendor, DATA_TYPE
FROM (
SELECT *,
       AGG_Impressions*(Installs/IF(AGG_Installs=0,1,AGG_Installs)) AS AVG_Impressions,
       AGG_Clicks*(Installs/IF(AGG_Installs=0,1,AGG_Installs)) AS AVG_Clicks,  
       AGG_Total_Cost*(Installs/IF(AGG_Installs=0,1,AGG_Installs)) AS AVG_Total_Cost      
FROM (
SELECT date, agency, media_source,	campaign, platform,
       Impressions, Clicks, Installs, Lead, QLead, Delivered, Issue, Total_Cost, Count, 
       NTB, event_name, device_category, device_vendor,-- device_model, 
       DATA_TYPE,
       SUM(Installs) OVER (PARTITION BY date, media_source,	campaign, platform) AS AGG_Installs,       
       SUM(AGG_Impressions) AS AGG_Impressions,
       SUM(AGG_Clicks) AS AGG_Clicks,
       SUM(AGG_Total_Cost) AS AGG_Total_Cost
FROM(
SELECT t1.*,
       IF(t1.event_name='install',IF(t2.Impressions IS NULL,0,t2.Impressions),0) AS AGG_Impressions,
       IF(t1.event_name='install',IF(t2.Clicks IS NULL,0,t2.Clicks),0) AS AGG_Clicks,
       IF(t1.event_name='install',IF(t2.Total_Cost IS NULL,0,t2.Total_Cost),0) AS AGG_Total_Cost
FROM (
---------------------------------------------------------------------------------------------------------------------------
-- BASE DATA 
SELECT date, agency, media_source, campaign, platform,
       0 AS Impressions,
       0 AS Clicks,
       SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,
       SUM(QLead) AS QLead,
       SUM(Delivered) AS Delivered,
       SUM(Issue) AS Issue,
       0 AS Total_Cost,
       SUM(Count) AS Count, 
       NTB, event_name, device_category, device_vendor,-- device_model, 
       'OFFLINE_FUNNEL' AS DATA_TYPE
FROM DASHBOARD_DATA_BASIC WHERE date <= DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY)
GROUP BY date, agency, media_source, campaign, event_name, platform, device_category,	device_vendor, NTB, DATA_TYPE
---------------------------------------------------------------------------------------------------------------------------
) AS t1
LEFT JOIN (
SELECT *
FROM DATA_AF_DAILY_REPORT
) AS t2
ON t1.date=t2.date AND
   t1.agency=t2.agency AND
   t1.media_source=t2.media_source AND
   t1.campaign=t2.campaign AND
   t1.platform=t2.platform
) AS t3
GROUP BY date, agency, media_source,	campaign, platform,
         Impressions, Clicks, Installs, Lead, QLead, Delivered, Issue, Total_Cost, Count, 
         NTB, event_name, device_category, device_vendor,-- device_model, 
         DATA_TYPE
) AS t4
) AS t5

---------------------------------------------------------------------------------------------------------------------------   
--UNION ALL
--SELECT date, media_source, campaign, platform,
--       0 AS Impressions,
--       0 AS Clicks,
--       Installs,
--       Lead,
--       QLead,
--       Issue,
--       0 AS Total_Cost,
--       NTB, 'QLead' AS event_name, device_category, device_vendor, device_model, 'OFFLINE_FUNNEL' AS DATA_TYPE      
--FROM DASHBOARD_DATA_BASIC
--WHERE QLead<>0
--UNION ALL
--SELECT date, media_source, campaign, platform,
--       0 AS Impressions,
--       0 AS Clicks,
--       Installs,
--       Lead,
--       QLead,
--       Issue,
--       0 AS Total_Cost,
--       NTB, 'Issue' AS event_name, device_category, device_vendor, device_model, 'OFFLINE_FUNNEL' AS DATA_TYPE      
--FROM DASHBOARD_DATA_BASIC
--WHERE Issue<>0
),
DASHBOARD_DATA_OFFLINE_FUNNEL_OLD AS (
SELECT date, agency, media_source,	campaign, platform,
       INC_Impressions AS Impressions,
       INC_Clicks AS Clicks,
       INC_Installs AS Installs,
       INC_Lead AS Lead,
       INC_QLead AS QLead,
       INC_Delivered AS Delivered,
       INC_Issue AS Issue,
       INC_Total_Cost AS Total_Cost,
       0 AS Count, '' AS NTB, 'install' AS event_name, 'phone' AS device_category,	IF(platform='ios','iPhone','samsung') AS device_vendor,-- 'NULL' AS device_model, 
       'OFFLINE_FUNNEL' AS DATA_TYPE       
FROM (
SELECT *
FROM (
SELECT date, agency, media_source, campaign, platform,
       Impressions, Clicks, Installs, Lead, QLead, Delivered, Issue, Total_Cost,
       OFF_Impressions, OFF_Clicks, OFF_Installs, OFF_Lead, OFF_QLead, OFF_Delivered, OFF_Issue, OFF_Total_Cost,
       Impressions-OFF_Impressions AS INC_Impressions,
       Clicks-OFF_Clicks AS INC_Clicks,
       Installs-OFF_Installs AS INC_Installs,    
       Lead-OFF_Lead AS INC_Lead,
       QLead-OFF_QLead AS INC_QLead,
       Delivered-OFF_Delivered AS INC_Delivered,
       Issue-OFF_Issue AS INC_Issue,
       Total_Cost-OFF_Total_Cost AS INC_Total_Cost
FROM (
SELECT date, agency, media_source, campaign, platform, 
       SUM(Impressions) AS Impressions,
       SUM(Clicks) AS Clicks,
       SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,	
       SUM(QLead) AS QLead, 
       SUM(Delivered) AS Delivered,
       SUM(Issue) AS Issue,
       SUM(Total_Cost) AS Total_Cost,
       ROUND(IF(OFF_Impressions IS NULL,0,OFF_Impressions),0) AS OFF_Impressions,
       ROUND(IF(OFF_Clicks IS NULL,0,OFF_Clicks),0) AS OFF_Clicks,
       ROUND(IF(OFF_Installs IS NULL,0,OFF_Installs),0) AS OFF_Installs,
       ROUND(IF(OFF_Lead IS NULL,0,OFF_Lead),0) AS OFF_Lead,	
       ROUND(IF(OFF_QLead IS NULL,0,OFF_QLead),0) AS OFF_QLead, 
       ROUND(IF(OFF_Delivered IS NULL,0,OFF_Delivered),0) AS OFF_Delivered,       
       ROUND(IF(OFF_Issue IS NULL,0,OFF_Issue),0) AS OFF_Issue,
       ROUND(IF(OFF_Total_Cost IS NULL,0,OFF_Total_Cost),0) AS OFF_Total_Cost
FROM (
SELECT t1.*,
       t2.Impressions AS OFF_Impressions,	t2.Clicks AS OFF_Clicks, t2.Installs AS OFF_Installs,	
       t2.Lead AS OFF_Lead, t2.QLead AS OFF_QLead, t2.Delivered AS OFF_Delivered, t2.Issue AS OFF_Issue,	t2.Total_Cost AS OFF_Total_Cost
FROM (       
SELECT date, agency, media_source, campaign, platform, 
       Impressions,	Clicks,	Installs,	Lead,	QLead, Delivered, Issue,	Total_Cost
FROM DASHBOARD_DATA_FULL_FUNNEL
) AS t1
LEFT JOIN (
SELECT date, agency, media_source, campaign, platform, 
       SUM(Impressions) AS Impressions,
       SUM(Clicks) AS Clicks,
       SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,	
       SUM(QLead) AS QLead, 
       SUM(Delivered) AS Delivered,
       SUM(Issue) AS Issue,
       SUM(Total_Cost) AS Total_Cost
FROM DASHBOARD_DATA_OFFLINE_FUNNEL_BASED
GROUP BY date, agency, media_source, campaign, platform
) AS t2
ON t1.date=t2.date AND
    t1.agency=t2.agency AND
    t1.media_source=t2.media_source AND
    t1.campaign=t2.campaign AND
    t1.platform=t2.platform
) AS t3 
GROUP BY date, agency, media_source, campaign, platform, OFF_Impressions, OFF_Clicks, OFF_Installs, OFF_Lead, OFF_QLead, OFF_Delivered, OFF_Issue, OFF_Total_Cost
) AS t4
) AS t5 #WHERE (INC_Impressions + INC_Clicks + INC_Installs + INC_Lead + INC_QLead + INC_Delivered + INC_Issue + INC_Total_Cost)>1
) AS t6
#UNION ALL
#SELECT *
#FROM DASHBOARD_DATA_OFFLINE_FUNNEL_BASED
),
DASHBOARD_DATA_OFFLINE_FUNNEL AS (
SELECT date, agency, media_source, campaign, platform, 
       SUM(Impressions) AS Impressions,	SUM(Clicks) AS Clicks, SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,	SUM(QLead) AS QLead, SUM(Delivered) AS Delivered,	SUM(Issue) AS Issue, SUM(Total_Cost) AS Total_Cost, 
       Count,	NTB, event_name, device_category,	device_vendor, DATA_TYPE
FROM (
SELECT IF(date IS NULL,	date_C,date) AS date,
       IF(date IS NULL,	agency_C,agency) AS agency,
       IF(date IS NULL,	media_source_C,media_source) AS media_source,
       IF(date IS NULL,	campaign_C,campaign) AS campaign,
       IF(date IS NULL,	platform_C,platform) AS platform,
       IF(date IS NULL,	0.0,Impressions) AS Impressions,
       IF(date IS NULL,	0.0,Clicks) AS Clicks,
       IF(date IS NULL,	0,Installs) AS Installs,
       IF(date IS NULL,	0,Lead) AS Lead,
       IF(date IS NULL,	0,QLead) AS QLead,
       IF(date IS NULL,	0,Delivered) AS Delivered,
       IF(date IS NULL,	0,Issue) AS Issue,
       CASE
           WHEN date IS NULL AND Total_Cost_C IS NULL THEN 0.0
           WHEN date IS NULL AND Total_Cost_C IS NOT NULL THEN Total_Cost_C
           ELSE IF(Total_lead IS NULL OR Total_lead=0,0,(Lead/Total_lead)*Total_Cost_C)
       END AS Total_Cost,
       IF(date IS NULL,	0,Count) AS Count,
       IF(date IS NULL,	'yes',NTB) AS NTB,
       IF(date IS NULL, 'FORM_DC_NTB_SUBMIT_LEAD',event_name) AS event_name,
       IF(date IS NULL, device_category_C,device_category) AS device_category,
       IF(date IS NULL, device_vendor_C,device_vendor) AS device_vendor,
       IF(date IS NULL, 'OFFLINE_FUNNEL',DATA_TYPE) AS DATA_TYPE,
#       date_C	agency_C,	media_source_C,	campaign_C,	platform_C,
#       Impresseion_C,	Clicks_C,	Installs_C,	Lead_C,	QLead_C, Delivered_C,	Issue_C, Total_Cost_C,
#       Count_C,	NTB_C, event_name_C, device_category_C,	device_vendor_C,DATA_TYPE_C
FROM (
SELECT LEAD_INFO.*,
       SUM(LEAD_INFO.Lead) OVER (PARTITION BY LEAD_INFO.date,LEAD_INFO.agency,LEAD_INFO.media_source,LEAD_INFO.campaign,LEAD_INFO.platform,LEAD_INFO.device_category,LEAD_INFO.device_vendor) AS Total_lead,
       COST_INFO.date AS date_C, COST_INFO.agency AS agency_C, COST_INFO.media_source AS media_source_C,
       COST_INFO.campaign AS campaign_C, COST_INFO.platform AS platform_C, 
       COST_INFO.Impressions AS Impresseion_C,	COST_INFO.Clicks AS Clicks_C, COST_INFO.Installs AS Installs_C,
       COST_INFO.Lead AS Lead_C, COST_INFO.QLead AS QLead_C, COST_INFO.Delivered AS Delivered_C,
       COST_INFO.Issue AS Issue_C, COST_INFO.Total_Cost AS Total_Cost_C, 
       COST_INFO.Count AS Count_C, COST_INFO.NTB AS NTB_C, COST_INFO.event_name AS event_name_C,
       COST_INFO.device_category AS device_category_C, COST_INFO.device_vendor AS device_vendor_C, COST_INFO.DATA_TYPE AS DATA_TYPE_C
FROM (
SELECT date, agency, media_source, campaign, platform, 
       SUM(Impressions) AS Impressions,	SUM(Clicks) AS Clicks, SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,	SUM(QLead) AS QLead, SUM(Delivered) AS Delivered,	SUM(Issue) AS Issue, SUM(Total_Cost) AS Total_Cost, 
       Count,	NTB, event_name, device_category,	device_vendor, DATA_TYPE
FROM DASHBOARD_DATA_OFFLINE_FUNNEL_BASED
WHERE event_name='FORM_DC_NTB_SUBMIT_LEAD'
GROUP BY date, agency, media_source, campaign, platform, Count,	NTB, event_name, device_category,	device_vendor, DATA_TYPE
) AS LEAD_INFO
FULL JOIN (
SELECT date, agency, media_source, campaign, platform, 
       SUM(Impressions) AS Impressions,	SUM(Clicks) AS Clicks, SUM(Installs) AS Installs,
       SUM(Lead) AS Lead,	SUM(QLead) AS QLead, SUM(Delivered) AS Delivered,	SUM(Issue) AS Issue, SUM(Total_Cost) AS Total_Cost, 
       '' AS Count, '' AS	NTB, '' AS event_name, device_category,	device_vendor, DATA_TYPE
FROM DASHBOARD_DATA_OFFLINE_FUNNEL_BASED
GROUP BY date, agency, media_source, campaign, platform, Count,	NTB, event_name, device_category,	device_vendor, DATA_TYPE
) AS COST_INFO
ON LEAD_INFO.date=COST_INFO.date AND
   LEAD_INFO.agency=COST_INFO.agency AND
   LEAD_INFO.media_source=COST_INFO.media_source AND
   LEAD_INFO.campaign=COST_INFO.campaign AND
   LEAD_INFO.platform=COST_INFO.platform AND
   LEAD_INFO.device_category=COST_INFO.device_category AND
   LEAD_INFO.device_vendor=COST_INFO.device_vendor
) AS t1
) AS t2
GROUP BY date, agency, media_source, campaign, platform, Count,	NTB, event_name, device_category,	device_vendor, DATA_TYPE
UNION ALL
SELECT *
FROM DASHBOARD_DATA_OFFLINE_FUNNEL_BASED
WHERE event_name<>'FORM_DC_NTB_SUBMIT_LEAD'
)

-----------------------------------------------●▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬●----------------------------------------------
-----------------------------------------------            START QUERY           --------------------------------------------
-----------------------------------------------●▬▬▬▬▬▬▬▬▬▬▬▬ஜ۩۞۩ஜ▬▬▬▬▬▬▬▬▬▬▬▬●----------------------------------------------


SELECT *,
       CASE
           WHEN REGEXP_CONTAINS(JOIN_KEY,R'MgCom') 
           THEN 'web-master@raiffeisen.ru;rostislav.orlov@raiffeisen.ru;vladislav.lavrentyev@raiffeisen.ru;viktoria.pustygina@raiffeisen.ru;pkabanov.raiffeisen@gmail.com;mgcomstat3@gmail.com'
           WHEN REGEXP_CONTAINS(JOIN_KEY,R'Gmobile') 
           THEN 'web-master@raiffeisen.ru;rostislav.orlov@raiffeisen.ru;vladislav.lavrentyev@raiffeisen.ru;viktoria.pustygina@raiffeisen.ru;pkabanov.raiffeisen@gmail.com;analytics@gomobile.ru'
           ELSE 'web-master@raiffeisen.ru;rostislav.orlov@raiffeisen.ru;vladislav.lavrentyev@raiffeisen.ru;viktoria.pustygina@raiffeisen.ru;pkabanov.raiffeisen@gmail.com'
       END AS EMAIL_ACCESS
FROM (
SELECT *,
       CASE  
           WHEN (agency is null or agency='None') AND NOT REGEXP_CONTAINS(media_source,R'(o|O)rganic') AND REGEXP_CONTAINS(campaign,R'ohm.*|.*OHM.*') THEN 'OHM'
           WHEN (agency is null or agency='None') AND NOT REGEXP_CONTAINS(media_source,R'(o|O)rganic') AND REGEXP_CONTAINS(campaign,'mgcom.*') THEN 'MgCom'
           WHEN (agency is null or agency='None') AND REGEXP_CONTAINS(media_source,'googleadwords_int') AND REGEXP_CONTAINS(campaign,R'^UAC.*') THEN 'MgCom'
           WHEN (agency is null or agency='None') AND REGEXP_CONTAINS(media_source,R'(o|O)rganic') THEN 'Organic'
           WHEN REGEXP_CONTAINS(agency,R'.*mgcom.*') THEN 'MgCom'
           WHEN REGEXP_CONTAINS(agency,R'.*admitad.*') THEN 'Admitad'
           WHEN REGEXP_CONTAINS(agency,R'.*zorkamobi.*') THEN 'Zorka'
           WHEN REGEXP_CONTAINS(agency,R'.*mobio.*') or REGEXP_CONTAINS(campaign,R'^mobio.*') THEN 'Mobio'
           WHEN REGEXP_CONTAINS(agency,R'.*gradientt.*') THEN 'Gradient'
           WHEN REGEXP_CONTAINS(agency,R'.*(g|G)mobile.*') THEN 'Gmobile'
           WHEN (agency is null or agency='None') THEN 'Other'
           ELSE agency 
       END AS JOIN_KEY
FROM (
SELECT *
FROM DASHBOARD_DATA_FULL_FUNNEL
UNION ALL
SELECT *
FROM DASHBOARD_DATA_OFFLINE_FUNNEL
) AS t1
) AS t2

#select *
#from DASHBOARD_DATA_OFFLINE_FUNNEL_TEST
#where date between '2020-10-01' and '2020-10-31'


--where date='2020-07-20' and media_source='googleadwords_int'
--order by date, af_ad_type, af_channel, af_siteid,	media_source,	campaign,	attributed_touch_type, event_name, 
--         platform, device_category,	device_vendor, device_model, NTB

--SELECT *
--FROM DASHBOARD_DATA_BASIC where event_name='FORM_DC_NTB_SUBMIT_LEAD'
--WHERE event_name<>'install' AND date <= DATE_ADD(CURRENT_DATE(), INTERVAL -1 DAY)
--order by date, af_ad_type, af_channel, af_siteid,	media_source,	campaign,	attributed_touch_type,--event_name, 
--         platform, device_category,	device_vendor, device_model, NTB



--select *
--from DASHBOARD_DATA_OFFLINE_FUNNEL
--where media_source<>'organic' and date='2020-10-21' and agency='mobio'

--select *
--from DATA_AF_DAILY_REPORT
--date, agency, media_source, campaign, platform